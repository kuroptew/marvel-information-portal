{"version":3,"sources":["components/pages/SinglePage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","getComic","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","setContent","ErrorMessage","src","img","style","display","width","height","objectFit","margin","alt","useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","name","getAllComics","_transformComics","char","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","Skeleton","className","Spinner","AppBanner","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.4bc4e9a9.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n  const {id} = useParams();\r\n  const [data, setData] = useState(null);\r\n  const {getComic, getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [id])\r\n\r\n  const updateData = () => {\r\n    clearError();\r\n\r\n    switch (dataType) {\r\n      case 'comic':\r\n        getComic(id).then(onDataLoaded).then(()=>setProcess('confirmed'));\r\n        break;\r\n      case 'character':\r\n        getCharacter(id).then(onDataLoaded).then(()=>setProcess('confirmed'));\r\n    }\r\n  }\r\n\r\n  const onDataLoaded = (data) => {\r\n    setData(data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBanner/>\r\n      {setContent(process,Component, data)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SinglePage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img src={img} style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} alt='Error'/>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;","import {useState, useCallback} from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [process, setProcess] = useState('waiting')\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n    setProcess('loading')\r\n\r\n    try {\r\n      const response = await fetch(url, {method, body, headers});\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status:${response.status}`)\r\n      }\r\n\r\n      const data = await response.json()\r\n\r\n\r\n      return data\r\n    } catch (e) {\r\n      setProcess('error')\r\n      throw e;\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setProcess('loading'), [])\r\n\r\n  return {request, clearError, process, setProcess}\r\n}\r\n\r\n\r\nexport default useHttp;","import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const {process, request, clearError, setProcess} = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=008af015b2b2d7a8ef807f7c3395db16';\r\n  const _baseOffset = 228\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n    return res.data.results.map(_transformCharacter)\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n    return _transformCharacter(res.data.results[0])\r\n  }\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n    return res.data.results.map(_transformComics)\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n    console.log(_transformComics(res.data.results[0]))\r\n  }\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items\r\n    }\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n    }\r\n  }\r\n\r\n  return {\r\n    process,\r\n    setProcess,\r\n    getCharacter,\r\n    getAllCharacters,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n    getCharacterByName\r\n  }\r\n}\r\n\r\nexport default useMarvelService;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Skeleton from \"../components/skeleton/Skeleton\";\r\nimport Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\n\r\nconst setContent =(process,Component, data)=>{\r\n  switch (process){\r\n    case 'waiting':\r\n      return <Skeleton/>;\r\n    case 'loading':\r\n      return <Spinner/>;\r\n    case 'confirmed':\r\n      return <Component data={data} />;\r\n    case 'error':\r\n      return <ErrorMessage/>;\r\n    default:\r\n      throw new Error('Unexpected process state')\r\n  }\r\n}\r\n\r\nexport default setContent;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}